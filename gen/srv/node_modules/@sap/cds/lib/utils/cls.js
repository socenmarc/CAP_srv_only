module.exports = { for: (cds,v) => {
  if (cds.env.features.cls && process.version >= 'v12' && parseFloat(/v\d+\.(\d+)/.exec(process.version)[1]) >= 18) {
    const context = Symbol('cds.req.context')
    const { executionAsyncResource:current, createHook } = module.require ('async_hooks')
    createHook ({ init: (id,t,tid, res) => {
      const cr = current()
      if (cr) res[context] = cr[context]
    }}).enable()
    Reflect.defineProperty (cds,'context',{ enumerable:1,
      set(v) { current()[context] = v._is_tx && v.context || v },
      get:()=> current()[context],
    })
  } else {
    Reflect.defineProperty (cds,'context',{ enumerable:1,
      get:()=> undefined,
      set:()=> {},
    })
  }
  return v ? cds.context = v : cds.context
}}
