"use strict";
var __spreadArrays = (this && this.__spreadArrays) || function () {
    for (var s = 0, i = 0, il = arguments.length; i < il; i++) s += arguments[i].length;
    for (var r = Array(s), k = 0, i = 0; i < il; i++)
        for (var a = arguments[i], j = 0, jl = a.length; j < jl; j++, k++)
            r[k] = a[j];
    return r;
};
Object.defineProperty(exports, "__esModule", { value: true });
exports.getExpand = exports.getExpandV2 = void 0;
var common_1 = require("../../common");
/**
 * Get an object containing the given expand as a query parameter, or an empty object if none was given.
 * In this OData v2 expand, selected properties are automatically added to the expand.
 *
 * @typeparam EntityT - Type of the entity to expand on
 * @param selects - The selects which are expanded if necessary
 * @param entityConstructor - Constructor type of the entity to expand on
 * @returns An object containing the query parameter or an empty object
 */
function getExpandV2(selects) {
    if (selects === void 0) { selects = []; }
    var expand = getExpandsAsString(selects);
    return expand.length ? { expand: expand.join(',') } : {};
}
exports.getExpandV2 = getExpandV2;
exports.getExpand = getExpandV2;
function getExpandsAsString(selectables, initialExpand, parent) {
    if (initialExpand === void 0) { initialExpand = []; }
    if (parent === void 0) { parent = ''; }
    return selectables.reduce(function (combination, selectable) {
        var fullFieldName = getPath(parent, selectable._fieldName);
        if (selectable instanceof common_1.Link) {
            combination = __spreadArrays(combination, [fullFieldName]);
            if (selectable._selects.length) {
                return getExpandsAsString(selectable._selects, combination, fullFieldName);
            }
        }
        return combination;
    }, initialExpand);
}
function getPath(parent, fieldName) {
    if (parent) {
        return parent + "/" + fieldName;
    }
    return fieldName;
}
//# sourceMappingURL=get-expand.js.map