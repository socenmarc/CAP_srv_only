const cdsc = require ('@sap/cds-compiler')


function cds_compile_to_csn (model, options, _flavor) {

  if (model && _is_csn(model)) {
    if (model.meta) {
      // check whether requested flavor matches model's ...
      const flavor = _flavor || this.xsn._flavor4 (options)
      if (flavor !== model.meta.flavor) throw new Error (
        `cds.compile.to.${flavor}.csn() was invoked on an already compiled csn with different meta.flavor='${model.meta.flavor}'`
      )
    }
    return model
  }

  // call compiler and return csn...
  const xsn = this.xsn (model, options, _flavor)
  return xsn.then ? xsn.then(_to_csn) : _to_csn(xsn)
}


const _is_csn = (x) => (x.definitions || x.extensions) && !x.$builtins
const _to_csn = (xsn) => {
  const csn = cdsc.compactModel (xsn)
  const _sources = Object.keys(xsn.sources)
  return Object.defineProperty (csn,'_sources', { value:_sources })
}

module.exports = cds_compile_to_csn
